# Use Ubuntu 24.04 as the base image
FROM ubuntu:24.04

# Set non-interactive mode for tzdata
ENV DEBIAN_FRONTEND=noninteractive TZ=Pacific/Auckland 

# Update the package list
RUN apt-get update \
    && apt full-upgrade -y \
    && apt-get install -y \
    wget \
    apt-transport-https \
    software-properties-common \
    ca-certificates \
    gnupg \
    && add-apt-repository ppa:git-core/ppa -y \
    && apt-get update

# RUN apt-get install -y \
#     openjdk-17-jdk-headless 

RUN apt-get install -y \
    python3-pip \
    && pip install --break-system-packages \
    yq \
    ansible \
    pywinrm

# Install PowerShell
RUN wget -q https://packages.microsoft.com/config/ubuntu/$(lsb_release -sr)/packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y \
    powershell \
    && pwsh -Command "Install-Module -Name AWSPowerShell.NetCore -Force -Scope AllUsers" \
    && pwsh -Command "Install-Module -Name Powershell-Yaml -Force -Scope AllUsers" 

# Install essential tools
RUN  apt-add-repository ppa:git-core/ppa -y \
    && apt-get install -y \
    vim \
    less \
    procps \
    iproute2 \
    tcpdump \
    netcat-openbsd \
    iputils-ping \
    dnsutils \
    unzip \
    zip \
    traceroute \
    htop \
    iproute2 \
    curl \
    git \
    jq

# Install Node.js
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash \
    && . ~/.nvm/nvm.sh \
    && nvm install 22

# Install AWS CLI
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip awscliv2.zip \
    && ./aws/install \
    && bash -c 'complete -C '/usr/local/bin/aws_completer' aws' \
    && rm -rf ./awscliv2.zip

# Install Packer
RUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - \
    && apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" -y \
    && apt-get update \
    && apt-get install -y packer 

RUN curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
    && chmod 644 /etc/apt/keyrings/kubernetes-apt-keyring.gpg \
    && echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list \
    && chmod 644 /etc/apt/sources.list.d/kubernetes.list \
    && apt-get update \
    && apt-get install -y kubectl

RUN curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null \
    && apt-get install apt-transport-https --yes \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list \
    && apt-get update \
    && apt-get install helm

#  clean up
RUN apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/apt/archives/*

# Set the values
RUN cat <<EOF >> .bashrc
alias ll='ls -halF'
EOF

# Set the values for SSH
RUN cat <<EOF >> /etc/ssh/ssh_config
PubkeyAcceptedKeyTypes ssh-rsa
HostkeyAlgorithms ssh-rsa
EOF
